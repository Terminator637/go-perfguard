// Code generated by "precompile.go". DO NOT EDIT.

package rulesdata

import "github.com/quasilyte/go-ruleguard/ruleguard/ir"

var Opt = &ir.File{
	PkgPath:       "gorules",
	CustomDecls:   []string{},
	BundleImports: []ir.BundleImport{},
	RuleGroups: []ir.RuleGroup{
		ir.RuleGroup{
			Line:        9,
			Name:        "regexpCompile",
			MatcherName: "m",
			DocTags: []string{
				"o1",
			},
			DocSummary: "Detects regexp compilation on hot execution paths",
			Rules: []ir.Rule{
				ir.Rule{
					Line: 14,
					SyntaxPatterns: []ir.PatternString{
						ir.PatternString{Line: 16, Value: "regexp.Compile($*_)"},
						ir.PatternString{Line: 17, Value: "regexp.MustCompile($*_)"},
						ir.PatternString{Line: 18, Value: "regexp.CompilePOSIX($*_)"},
						ir.PatternString{Line: 19, Value: "regexp.MustCompilePOSIX($*_)"},
						ir.PatternString{Line: 21, Value: "regexp.Match($*_)"},
						ir.PatternString{Line: 22, Value: "regexp.MatchString($*_)"},
						ir.PatternString{Line: 23, Value: "regexp.MatchReader($*_)"},
					},
					ReportTemplate: "regexp compilation should be avoided on the hot paths",
				},
			},
		},
	},
}

